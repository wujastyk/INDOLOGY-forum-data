[INDOLOGY] sanskrit and computers?
Hello,
As a person engaged with Natural Language Processing, I would like to
submit the following.
On Sun, 12 Apr 2020 at 14:57, patrick mccartney via INDOLOGY <
indology at list.indology.info> wrote:
A) Regarding Rick Briggs article --
a) Rick Briggs in his article  'Knowledge Representation in Sanskrit and
Artificial Intelligence' highlights the striking similarity of the
Knowledge Representation scheme such as Semantic Net with the structure of
'saabdabodha in Indian theories.
b) Rick Briggs does not say ANYTHING about the suitability of 'SANSKRIT
LANGUAGE' for computers.
c) After writing this article, I have not seen any follow-up on this either
by Rick Briggs or anybody from NASA on this topic.
Indian theories of 'saabdabodha and the Panini's A.s.taadhyaayii have
attracted the attention of many computational linguists and computer
scientists.
B) Regarding the suitability of Indian theories for Natural Language
Processing (NLP) --
Here are a few relevant references.
@inproceedings{
 author = "Akshar Bharati and Rajeev Sangal",
 title = "A Karaka Based Approach to Parsing of Indian Languages",
 booktitle = "Proceedings of International Conference on Computational
Linguistics (Vol. 3)",
 address = "Helsinki, Association for Computational Linguistics NY",
 year ="1990",
}
*Paninian Grammar Framework Applied to English*
<http://www.iiit.ac.in/~sangal/files/papers/pan_eng_98salr.pdf>
Akshar Bharati, Medhavi Bhatia, Vineet Chaitanya and Rajeev Sangal
South Asian Langauge Review, Creative Books, New Delhi, 1997a
In the past few years, several computational theories for NLP were evolved
such as -- Lexical Functional Grammar(LFG), Tree Adjoining Grammar (TAG)
and Head-Driven Phrase Structure Grammar (HPSG) etc.
These grammars were used to develop parsers. Grammars such as TAG produce a
constituency parse but at the same time, the order of operations involved
provides us with a dependency tree as well.
In the past two decades, the computational linguists have recognised the
importance of dependency parsing over the constituency parsing. The
principles with which Carnegie Mellon parser for English works are very
close to the concepts of aakaa.nk.saa, yogyataa and sannidhi. Minipar, a
parser for English developed on the Chomsky's minimalism produces a
dependency parse for English. Parser developed at Stanford University,
using Machine Learning algorithms, produce dependency parse trees for
English and many other languages such as Chinese, etc.
Computational linguists are interested in looking at the Paa.ninian Kaaraka
theory for dependency analysis. Within India there are several efforts in
this direction.
C) Regarding Paa.nini's A.s.taadhyaayii
In the last 10-15 years, there have been several efforts towards
understanding the A.s.taadhyaayii from a computational perspective.
The Proceedings of International Sanskrit Computational Linguistics
Symposium contain several articles on this topic by various researchers.
With kind regards,
Amba Kulkarni
? ?? ?????: ?????? ????? ??????: ll
Let noble thoughts come to us from every side.
- Rig Veda, I-89-i.
Professor & Head
Department of Sanskrit Studies
University of Hyderabad
Prof. C.R. Rao Road
Hyderabad-500 046
(91) 040 23133802(off)
http://scl.samsaadhanii.in <http://sanskrit.uohyd.ac.in/faculty/amba>
http://sanskrit.uohyd.ac.in/scl
http://tdil-dc.in/san/
http://sanskrit.uohyd.ac.in/faculty/amba
